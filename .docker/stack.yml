version: '3.4'

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  db:
    image: mysql:8.0
    container_name: rent_database
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: test123
      MYSQL_PASSWORD: test123
      MYSQL_DATABASE: rent
      MYSQL_USER: user
    ports:
      - 3306:3306
  flyway:
    image: flyway/flyway:8.5.8
    container_name: rent_flyway
    command: -url=jdbc:mysql://db -schemas=rent -user=root -password=test123 -connectRetries=60 migrate
    volumes:
      - ../resources/flyway/db:/flyway/sql
    depends_on:
      - db
  adminer:
    image: adminer:4.8.1
    container_name: rent_adminer
    restart: always
    ports:
      - 8111:8080
  swagger-ui:
    image: mrin9/rapidoc
    container_name: rent_swagger
    environment:
      SPEC_URL: http://localhost:5000/v1/openapi
      RAPIDOC_OPTIONS: "theme='dark' allow-authentication='true' api-key-name='Authorization' api-key-value='Bearer XPTO' api-key-location='header' "
    ports:
      - 8112:80
  nginx:
    image: nginx
    container_name: rent_nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      NGINX_PORT: 5000
      NGINX_HOST: 127.0.0.1
    network_mode: host
    expose:
      - 5000
  prometheus:
    image: prom/prometheus:v2.34.0
    container_name: rent_prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    network_mode: host
    labels:
      org.label-schema.group: "monitoring"
    expose:
      - 9090
  grafana:
    image: grafana/grafana:latest
    container_name: rent_grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    restart: unless-stopped
    network_mode: host
    labels:
      org.label-schema.group: "monitoring"
    expose:
      - 3000
  sonar:
    image: sonarqube:lts-developer
    container_name: rent_sonar
    ports:
      - "9000:9000"
